{
  "endpoints": {
    "/channels/in_app/inbox/tokens": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.GetInAppInboxTokensParameters;\nimport com.magicbell.magicbelluserclient.models.InboxTokenResponseCollection;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tGetInAppInboxTokensParameters requestParameters = GetInAppInboxTokensParameters.builder()\n\t\t\t.limit(10L)\n\t\t\t.startingAfter(\"starting_after\")\n\t\t\t.endingBefore(\"ending_before\")\n\t\t\t.build();\n\n\t\tInboxTokenResponseCollection response = magicbellUserClient.channels.getInAppInboxTokens(requestParameters);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.InboxToken;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tInboxToken inboxToken = InboxToken.builder()\n\t\t\t.connectionId(\"connection_id\")\n\t\t\t.token(\"in exeu esse co\")\n\t\t\t.build();\n\n\t\tInboxToken response = magicbellUserClient.channels.saveInAppInboxToken(inboxToken);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/in_app/inbox/tokens/{token_id}": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.InboxTokenResponse;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tInboxTokenResponse response = magicbellUserClient.channels.getInAppInboxToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "delete": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.DiscardResult;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tDiscardResult response = magicbellUserClient.channels.discardInAppInboxToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/mobile_push/apns/tokens": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.ApnsTokenCollection;\nimport com.magicbell.magicbelluserclient.models.GetMobilePushApnsTokensParameters;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tGetMobilePushApnsTokensParameters requestParameters = GetMobilePushApnsTokensParameters.builder()\n\t\t\t.limit(3L)\n\t\t\t.startingAfter(\"starting_after\")\n\t\t\t.endingBefore(\"ending_before\")\n\t\t\t.build();\n\n\t\tApnsTokenCollection response = magicbellUserClient.channels.getMobilePushApnsTokens(requestParameters);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.ApnsTokenPayload;\nimport com.magicbell.magicbelluserclient.models.ApnsTokenPayloadInstallationId;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tApnsTokenPayload apnsTokenPayload = ApnsTokenPayload.builder()\n\t\t\t.appId(\"app_id\")\n\t\t\t.deviceToken(\"doloresed quis \")\n\t\t\t.installationId(ApnsTokenPayloadInstallationId.DEVELOPMENT)\n\t\t\t.build();\n\n\t\tApnsTokenPayload response = magicbellUserClient.channels.saveMobilePushApnsToken(apnsTokenPayload);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/mobile_push/apns/tokens/{token_id}": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.ApnsToken;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tApnsToken response = magicbellUserClient.channels.getMobilePushApnsToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "delete": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.DiscardResult;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tDiscardResult response = magicbellUserClient.channels.discardMobilePushApnsToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/mobile_push/expo/tokens": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.ExpoTokenCollection;\nimport com.magicbell.magicbelluserclient.models.GetMobilePushExpoTokensParameters;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tGetMobilePushExpoTokensParameters requestParameters = GetMobilePushExpoTokensParameters.builder()\n\t\t\t.limit(9L)\n\t\t\t.startingAfter(\"starting_after\")\n\t\t\t.endingBefore(\"ending_before\")\n\t\t\t.build();\n\n\t\tExpoTokenCollection response = magicbellUserClient.channels.getMobilePushExpoTokens(requestParameters);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.ExpoTokenPayload;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tExpoTokenPayload expoTokenPayload = ExpoTokenPayload.builder()\n\t\t\t.deviceToken(\"device_token\")\n\t\t\t.build();\n\n\t\tExpoTokenPayload response = magicbellUserClient.channels.saveMobilePushExpoToken(expoTokenPayload);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/mobile_push/expo/tokens/{token_id}": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.ExpoToken;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tExpoToken response = magicbellUserClient.channels.getMobilePushExpoToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "delete": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.DiscardResult;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tDiscardResult response = magicbellUserClient.channels.discardMobilePushExpoToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/mobile_push/fcm/tokens": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.FcmTokenCollection;\nimport com.magicbell.magicbelluserclient.models.GetMobilePushFcmTokensParameters;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tGetMobilePushFcmTokensParameters requestParameters = GetMobilePushFcmTokensParameters.builder()\n\t\t\t.limit(6L)\n\t\t\t.startingAfter(\"starting_after\")\n\t\t\t.endingBefore(\"ending_before\")\n\t\t\t.build();\n\n\t\tFcmTokenCollection response = magicbellUserClient.channels.getMobilePushFcmTokens(requestParameters);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.FcmTokenPayload;\nimport com.magicbell.magicbelluserclient.models.FcmTokenPayloadInstallationId;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tFcmTokenPayload fcmTokenPayload = FcmTokenPayload.builder()\n\t\t\t.deviceToken(\"in commodo quis\")\n\t\t\t.installationId(FcmTokenPayloadInstallationId.DEVELOPMENT)\n\t\t\t.build();\n\n\t\tFcmTokenPayload response = magicbellUserClient.channels.saveMobilePushFcmToken(fcmTokenPayload);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/mobile_push/fcm/tokens/{token_id}": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.FcmToken;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tFcmToken response = magicbellUserClient.channels.getMobilePushFcmToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "delete": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.DiscardResult;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tDiscardResult response = magicbellUserClient.channels.discardMobilePushFcmToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/slack/tokens": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.GetSlackTokensParameters;\nimport com.magicbell.magicbelluserclient.models.SlackTokenCollection;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tGetSlackTokensParameters requestParameters = GetSlackTokensParameters.builder()\n\t\t\t.limit(2L)\n\t\t\t.startingAfter(\"starting_after\")\n\t\t\t.endingBefore(\"ending_before\")\n\t\t\t.build();\n\n\t\tSlackTokenCollection response = magicbellUserClient.channels.getSlackTokens(requestParameters);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.SlackTokenPayload;\nimport com.magicbell.magicbelluserclient.models.SlackTokenPayloadOauth;\nimport com.magicbell.magicbelluserclient.models.SlackTokenPayloadWebhook;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tSlackTokenPayloadOauth slackTokenPayloadOauth = SlackTokenPayloadOauth.builder()\n\t\t\t.channelId(\"channel_id\")\n\t\t\t.installationId(\"installation_id\")\n\t\t\t.scope(\"scope\")\n\t\t\t.build();\n\t\t\n\t\tSlackTokenPayloadWebhook slackTokenPayloadWebhook = SlackTokenPayloadWebhook.builder()\n\t\t\t.url(\"url\")\n\t\t\t.build();\n\t\t\n\t\tSlackTokenPayload slackTokenPayload = SlackTokenPayload.builder()\n\t\t\t.oauth(slackTokenPayloadOauth)\n\t\t\t.webhook(slackTokenPayloadWebhook)\n\t\t\t.build();\n\n\t\tSlackTokenPayload response = magicbellUserClient.channels.saveSlackToken(slackTokenPayload);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/slack/tokens/{token_id}": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.SlackToken;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tSlackToken response = magicbellUserClient.channels.getSlackToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "delete": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.DiscardResult;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tDiscardResult response = magicbellUserClient.channels.discardSlackToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/teams/tokens": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.GetTeamsTokensParameters;\nimport com.magicbell.magicbelluserclient.models.TeamsTokenCollection;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tGetTeamsTokensParameters requestParameters = GetTeamsTokensParameters.builder()\n\t\t\t.limit(5L)\n\t\t\t.startingAfter(\"starting_after\")\n\t\t\t.endingBefore(\"ending_before\")\n\t\t\t.build();\n\n\t\tTeamsTokenCollection response = magicbellUserClient.channels.getTeamsTokens(requestParameters);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.TeamsTokenPayload;\nimport com.magicbell.magicbelluserclient.models.TeamsTokenPayloadWebhook;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tTeamsTokenPayloadWebhook teamsTokenPayloadWebhook = TeamsTokenPayloadWebhook.builder()\n\t\t\t.url(\"url\")\n\t\t\t.build();\n\t\t\n\t\tTeamsTokenPayload teamsTokenPayload = TeamsTokenPayload.builder()\n\t\t\t.webhook(teamsTokenPayloadWebhook)\n\t\t\t.build();\n\n\t\tTeamsTokenPayload response = magicbellUserClient.channels.saveTeamsToken(teamsTokenPayload);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/teams/tokens/{token_id}": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.TeamsToken;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tTeamsToken response = magicbellUserClient.channels.getTeamsToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "delete": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.DiscardResult;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tDiscardResult response = magicbellUserClient.channels.discardTeamsToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/web_push/tokens": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.GetWebPushTokensParameters;\nimport com.magicbell.magicbelluserclient.models.WebPushTokenCollection;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tGetWebPushTokensParameters requestParameters = GetWebPushTokensParameters.builder()\n\t\t\t.limit(3L)\n\t\t\t.startingAfter(\"starting_after\")\n\t\t\t.endingBefore(\"ending_before\")\n\t\t\t.build();\n\n\t\tWebPushTokenCollection response = magicbellUserClient.channels.getWebPushTokens(requestParameters);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.WebPushTokenPayload;\nimport com.magicbell.magicbelluserclient.models.WebPushTokenPayloadKeys;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tWebPushTokenPayloadKeys webPushTokenPayloadKeys = WebPushTokenPayloadKeys.builder()\n\t\t\t.auth(\"auth\")\n\t\t\t.p256dh(\"p256dh\")\n\t\t\t.build();\n\t\t\n\t\tWebPushTokenPayload webPushTokenPayload = WebPushTokenPayload.builder()\n\t\t\t.endpoint(\"endpoint\")\n\t\t\t.keys(webPushTokenPayloadKeys)\n\t\t\t.build();\n\n\t\tWebPushTokenPayload response = magicbellUserClient.channels.saveWebPushToken(webPushTokenPayload);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/channels/web_push/tokens/{token_id}": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.WebPushToken;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tWebPushToken response = magicbellUserClient.channels.getWebPushToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n",
      "delete": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.DiscardResult;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tDiscardResult response = magicbellUserClient.channels.discardWebPushToken(\"token_id\");\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/integrations/inbox/installations": {
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.Banner;\nimport com.magicbell.magicbelluserclient.models.DefaultHover;\nimport com.magicbell.magicbelluserclient.models.DefaultState;\nimport com.magicbell.magicbelluserclient.models.Default_;\nimport com.magicbell.magicbelluserclient.models.Dialog;\nimport com.magicbell.magicbelluserclient.models.Footer;\nimport com.magicbell.magicbelluserclient.models.Header;\nimport com.magicbell.magicbelluserclient.models.Icon;\nimport com.magicbell.magicbelluserclient.models.Images;\nimport com.magicbell.magicbelluserclient.models.InboxConfigPayload;\nimport com.magicbell.magicbelluserclient.models.Theme;\nimport com.magicbell.magicbelluserclient.models.ThemeNotification;\nimport com.magicbell.magicbelluserclient.models.Unread;\nimport com.magicbell.magicbelluserclient.models.UnreadHover;\nimport com.magicbell.magicbelluserclient.models.UnreadState;\nimport com.magicbell.magicbelluserclient.models.Unseen;\nimport com.magicbell.magicbelluserclient.models.UnseenBadge;\nimport com.magicbell.magicbelluserclient.models.UnseenHover;\nimport com.magicbell.magicbelluserclient.models.UnseenState;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tImages images = Images.builder()\n\t\t\t.emptyInboxUrl(\"emptyInboxUrl\")\n\t\t\t.build();\n\t\t\n\t\tBanner banner = Banner.builder()\n\t\t\t.backgroundColor(\"backgroundColor\")\n\t\t\t.backgroundOpacity(0.97D)\n\t\t\t.fontSize(\"fontSize\")\n\t\t\t.textColor(\"textColor\")\n\t\t\t.build();\n\t\t\n\t\tDialog dialog = Dialog.builder()\n\t\t\t.accentColor(\"accentColor\")\n\t\t\t.backgroundColor(\"backgroundColor\")\n\t\t\t.textColor(\"textColor\")\n\t\t\t.build();\n\t\t\n\t\tFooter footer = Footer.builder()\n\t\t\t.backgroundColor(\"backgroundColor\")\n\t\t\t.borderRadius(\"borderRadius\")\n\t\t\t.fontSize(\"fontSize\")\n\t\t\t.textColor(\"textColor\")\n\t\t\t.build();\n\t\t\n\t\tHeader header = Header.builder()\n\t\t\t.backgroundColor(\"backgroundColor\")\n\t\t\t.borderRadius(\"borderRadius\")\n\t\t\t.fontFamily(\"fontFamily\")\n\t\t\t.fontSize(\"fontSize\")\n\t\t\t.textColor(\"textColor\")\n\t\t\t.build();\n\t\t\n\t\tIcon icon = Icon.builder()\n\t\t\t.borderColor(\"borderColor\")\n\t\t\t.width(\"width\")\n\t\t\t.build();\n\t\t\n\t\tDefaultHover defaultHover = DefaultHover.builder()\n\t\t\t.backgroundColor(\"backgroundColor\")\n\t\t\t.build();\n\t\t\n\t\tDefaultState defaultState = DefaultState.builder()\n\t\t\t.color(\"color\")\n\t\t\t.build();\n\t\t\n\t\tDefault_ default_ = Default_.builder()\n\t\t\t.backgroundColor(\"backgroundColor\")\n\t\t\t.borderRadius(\"borderRadius\")\n\t\t\t.fontFamily(\"fontFamily\")\n\t\t\t.fontSize(\"fontSize\")\n\t\t\t.hover(defaultHover)\n\t\t\t.margin(\"margin\")\n\t\t\t.state(defaultState)\n\t\t\t.textColor(\"textColor\")\n\t\t\t.build();\n\t\t\n\t\tUnreadHover unreadHover = UnreadHover.builder()\n\t\t\t.backgroundColor(\"backgroundColor\")\n\t\t\t.build();\n\t\t\n\t\tUnreadState unreadState = UnreadState.builder()\n\t\t\t.color(\"color\")\n\t\t\t.build();\n\t\t\n\t\tUnread unread = Unread.builder()\n\t\t\t.backgroundColor(\"backgroundColor\")\n\t\t\t.hover(unreadHover)\n\t\t\t.state(unreadState)\n\t\t\t.textColor(\"textColor\")\n\t\t\t.build();\n\t\t\n\t\tUnseenHover unseenHover = UnseenHover.builder()\n\t\t\t.backgroundColor(\"backgroundColor\")\n\t\t\t.build();\n\t\t\n\t\tUnseenState unseenState = UnseenState.builder()\n\t\t\t.color(\"color\")\n\t\t\t.build();\n\t\t\n\t\tUnseen unseen = Unseen.builder()\n\t\t\t.backgroundColor(\"backgroundColor\")\n\t\t\t.hover(unseenHover)\n\t\t\t.state(unseenState)\n\t\t\t.textColor(\"textColor\")\n\t\t\t.build();\n\t\t\n\t\tThemeNotification themeNotification = ThemeNotification.builder()\n\t\t\t.default_(default_)\n\t\t\t.unread(unread)\n\t\t\t.unseen(unseen)\n\t\t\t.build();\n\t\t\n\t\tUnseenBadge unseenBadge = UnseenBadge.builder()\n\t\t\t.backgroundColor(\"backgroundColor\")\n\t\t\t.build();\n\t\t\n\t\tTheme theme = Theme.builder()\n\t\t\t.banner(banner)\n\t\t\t.dialog(dialog)\n\t\t\t.footer(footer)\n\t\t\t.header(header)\n\t\t\t.icon(icon)\n\t\t\t.notification(themeNotification)\n\t\t\t.unseenBadge(unseenBadge)\n\t\t\t.build();\n\t\t\n\t\tInboxConfigPayload inboxConfigPayload = InboxConfigPayload.builder()\n\t\t\t.images(images)\n\t\t\t.locale(\"locale\")\n\t\t\t.theme(theme)\n\t\t\t.build();\n\n\t\tInboxConfigPayload response = magicbellUserClient.integrations.saveInboxInstallation(inboxConfigPayload);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/integrations/inbox/installations/start": {
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.InboxConfigPayload;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tInboxConfigPayload response = magicbellUserClient.integrations.startInboxInstallation();\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/integrations/slack/installations": {
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.AuthedUser;\nimport com.magicbell.magicbelluserclient.models.Enterprise;\nimport com.magicbell.magicbelluserclient.models.IncomingWebhook;\nimport com.magicbell.magicbelluserclient.models.SlackInstallation;\nimport com.magicbell.magicbelluserclient.models.Team;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tAuthedUser authedUser = AuthedUser.builder()\n\t\t\t.accessToken(\"access_token\")\n\t\t\t.expiresIn(0L)\n\t\t\t.id(\"id\")\n\t\t\t.refreshToken(\"refresh_token\")\n\t\t\t.scope(\"scope\")\n\t\t\t.tokenType(\"token_type\")\n\t\t\t.build();\n\t\t\n\t\tEnterprise enterprise = Enterprise.builder()\n\t\t\t.id(\"id\")\n\t\t\t.name(\"name\")\n\t\t\t.build();\n\t\t\n\t\tIncomingWebhook incomingWebhook = IncomingWebhook.builder()\n\t\t\t.channel(\"channel\")\n\t\t\t.configurationUrl(\"configuration_url\")\n\t\t\t.url(\"url\")\n\t\t\t.build();\n\t\t\n\t\tTeam team = Team.builder()\n\t\t\t.id(\"id\")\n\t\t\t.name(\"name\")\n\t\t\t.build();\n\t\t\n\t\tSlackInstallation slackInstallation = SlackInstallation.builder()\n\t\t\t.accessToken(\"access_token\")\n\t\t\t.appId(\"app_id\")\n\t\t\t.authedUser(authedUser)\n\t\t\t.botUserId(\"bot_user_id\")\n\t\t\t.enterprise(enterprise)\n\t\t\t.expiresIn(6L)\n\t\t\t.id(\"FFPMPE-+\")\n\t\t\t.incomingWebhook(incomingWebhook)\n\t\t\t.isEnterpriseInstall(true)\n\t\t\t.refreshToken(\"refresh_token\")\n\t\t\t.scope(\"scope\")\n\t\t\t.team(team)\n\t\t\t.tokenType(\"token_type\")\n\t\t\t.build();\n\n\t\tSlackInstallation response = magicbellUserClient.integrations.saveSlackInstallation(slackInstallation);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/integrations/slack/installations/finish": {
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.SlackFinishInstallResponse;\nimport com.magicbell.magicbelluserclient.models.SlackInstallation;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tSlackFinishInstallResponse slackFinishInstallResponse = SlackFinishInstallResponse.builder()\n\t\t\t.appId(\"app_id\")\n\t\t\t.code(\"code\")\n\t\t\t.redirectUrl(\"redirect_url\")\n\t\t\t.build();\n\n\t\tSlackInstallation response = magicbellUserClient.integrations.finishSlackInstallation(slackFinishInstallResponse);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/integrations/slack/installations/start": {
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.SlackStartInstall;\nimport com.magicbell.magicbelluserclient.models.SlackStartInstallResponseContent;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tList<String> extraScopesList = Arrays.asList(\"extra_scopes\");\n\t\t\n\t\tSlackStartInstall slackStartInstall = SlackStartInstall.builder()\n\t\t\t.appId(\"app_id\")\n\t\t\t.authUrl(\"auth_url\")\n\t\t\t.extraScopes(extraScopesList)\n\t\t\t.redirectUrl(\"redirect_url\")\n\t\t\t.build();\n\n\t\tSlackStartInstallResponseContent response = magicbellUserClient.integrations.startSlackInstallation(slackStartInstall);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/integrations/templates/installations": {
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.TemplatesInstallation;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tTemplatesInstallation templatesInstallation = TemplatesInstallation.builder()\n\t\t\t.category(\"category\")\n\t\t\t.channel(\"channel\")\n\t\t\t.text(\"text\")\n\t\t\t.build();\n\n\t\tTemplatesInstallation response = magicbellUserClient.integrations.saveTemplatesInstallation(templatesInstallation);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/integrations/web_push/installations": {
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.WebPushTokenPayload;\nimport com.magicbell.magicbelluserclient.models.WebPushTokenPayloadKeys;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tWebPushTokenPayloadKeys webPushTokenPayloadKeys = WebPushTokenPayloadKeys.builder()\n\t\t\t.auth(\"auth\")\n\t\t\t.p256dh(\"p256dh\")\n\t\t\t.build();\n\t\t\n\t\tWebPushTokenPayload webPushTokenPayload = WebPushTokenPayload.builder()\n\t\t\t.endpoint(\"endpoint\")\n\t\t\t.keys(webPushTokenPayloadKeys)\n\t\t\t.build();\n\n\t\tWebPushTokenPayload response = magicbellUserClient.integrations.saveWebPushInstallation(webPushTokenPayload);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/integrations/web_push/installations/start": {
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.WebPushStartInstallationResponse;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tWebPushStartInstallationResponse response = magicbellUserClient.integrations.startWebPushInstallation();\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/notifications": {
      "get": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.models.ListNotificationsParameters;\nimport com.magicbell.magicbelluserclient.models.NotificationCollection;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tListNotificationsParameters requestParameters = ListNotificationsParameters.builder()\n\t\t\t.limit(7L)\n\t\t\t.startingAfter(\"starting_after\")\n\t\t\t.endingBefore(\"ending_before\")\n\t\t\t.status(\"status\")\n\t\t\t.topic(\"topic\")\n\t\t\t.build();\n\n\t\tNotificationCollection response = magicbellUserClient.notifications.listNotifications(requestParameters);\n\t\t\t\n\t\tSystem.out.println(response);\n    }\n}\n"
    },
    "/notifications/{notification_id}/archive": {
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tmagicbellUserClient.notifications.archiveNotification(\"notification_id\");\n    }\n}\n"
    },
    "/notifications/{notification_id}/read": {
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tmagicbellUserClient.notifications.markNotificationRead(\"notification_id\");\n    }\n}\n"
    },
    "/notifications/{notification_id}/unarchive": {
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tmagicbellUserClient.notifications.unarchiveNotification(\"notification_id\");\n    }\n}\n"
    },
    "/notifications/{notification_id}/unread": {
      "post": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\n\npublic class Main {\n    public static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n\t\tmagicbellUserClient.notifications.markNotificationUnread(\"notification_id\");\n    }\n}\n"
    }
  },
  "example": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\nimport com.magicbell.magicbelluserclient.exceptions.ApiException;\nimport com.magicbell.magicbelluserclient.models.GetInAppInboxTokensParameters;\nimport com.magicbell.magicbelluserclient.models.InboxTokenResponseCollection;\n  \npublic class Main {\n  public static void main(String[] args) {\n    MagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n    MagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\n    GetInAppInboxTokensParameters requestParameters = GetInAppInboxTokensParameters.builder()\n\t\t\t.limit(10L)\n\t\t\t.startingAfter(\"starting_after\")\n\t\t\t.endingBefore(\"ending_before\")\n\t\t\t.build();\n\n\n    try {\n      InboxTokenResponseCollection response = magicbellUserClient.channels.getInAppInboxTokens(requestParameters);\n        \n      System.out.println(response);\n    } catch (ApiException e) {\n      e.printStackTrace();\n    }\n\n    System.exit(0);\n  }\n}\n",
  "authentication": {
    "bearer": {
      "constructor": "import com.magicbell.magicbelluserclient.MagicbellUserClient;\nimport com.magicbell.magicbelluserclient.config.MagicbellUserClientConfig;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tMagicbellUserClientConfig config = MagicbellUserClientConfig.builder()\n\t\t\t.accessToken(\"YOUR_ACCESS_TOKEN\")\n\t\t\t.build();\n\n\t\tMagicbellUserClient magicbellUserClient = new MagicbellUserClient(config);\n\t}\n}",
      "setter": "magicbellUserClient.setAccessToken('YOUR_ACCESS_TOKEN');"
    }
  }
}
